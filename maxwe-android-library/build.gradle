apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        abortOnError false
    }
//    useLibrary 'org.apache.http.legacy'
}
/**
 * 配置模块私服地址
 */
repositories {
    maven {
        url 'https://xxx'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
}

/**
 * 使用Maven插件
 */
apply plugin: 'maven'
/**
 * 定义构件坐标属性
 */
def groupId = 'org.maxwe.android.project'
def artifactId = "library"
def snapshot = '-SNAPSHOT'
def version = '1.0.0' + snapshot

def keyDir = 'dir'
def valueDirAll = 'all'
def valueDirLocal = 'local'
def valueDirRetech = 'retech'

def dir = valueDirLocal;
def publishToMavenLocal = 'file:///Users/dingpengwei/.m2/repository'
def publishToRetechSnapshot = 'http://192.168.10.8:8081/nexus/content/repositories/snapshots'
def publishToRetechRelease = 'http://192.168.10.8:8081/nexus/content/repositories/releases'
/**
 * 定义仓库地址以及上传
 * 使用命令gradle upload
 * gradle clean build upload -Pdir=all
 * gradle clean build upload -Pdir=local
 * gradle clean build upload -Pdir=retech
 */
uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty(keyDir)) {
                dir = getProperty(keyDir)
            }
            if (valueDirAll.equalsIgnoreCase(dir)) {
                repository(url: publishToMavenLocal)
                repository(url: publishToRetechSnapshot) {
                    authentication(userName: System.getenv("MYNEXUSUSERNAME"), password: System.getenv("MYNEXUSPASSWORD"))
                }
            } else if (valueDirRetech.equalsIgnoreCase(dir)) {
                if ("$version".endsWith(snapshot)) {
                    repository(url: publishToRetechSnapshot) {
                        authentication(userName: System.getenv("MYNEXUSUSERNAME"), password: System.getenv("MYNEXUSPASSWORD"))
                    }
                } else {
                    repository(url: publishToRetechRelease) {
                        authentication(userName: System.getenv("MYNEXUSUSERNAME"), password: System.getenv("MYNEXUSPASSWORD"))
                    }
                }
            } else {
                repository(url: publishToMavenLocal)
            }
            pom.version = "$version"
            pom.artifactId = "$artifactId"
            pom.groupId = "$groupId"
        }
    }
}

task publishToAll << {
    publishToLocal.execute()
    publishToRetech.execute()
}

task publishToLocal << {
    println "publishToLocal"
}

task publishToRetech << {
    println "publishToRetech"
}

